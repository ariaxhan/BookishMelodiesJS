{"ast":null,"code":"var _jsxFileName = \"/Users/ariahan/Documents/FinalProject/client/src/components/SpotifySearch.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport SharedDataContext from './SharedDataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SpotifySearch() {\n  _s();\n  const {\n    searchTerm\n  } = useContext(SharedDataContext);\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    if (searchTerm) {\n      fetch(`/api/spotify-search?q=${encodeURIComponent('track:' + searchTerm)}&type=track`, {\n        method: 'GET',\n        headers: {}\n      }).then(response => response.json()).then(data => setData(data)).catch(error => console.error('Error fetching data:', error));\n    }\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(data, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(SpotifySearch, \"VtZv558j1IfzALERfiGKUGvVHiE=\");\n_c = SpotifySearch;\nexport default SpotifySearch;\nvar _c;\n$RefreshReg$(_c, \"SpotifySearch\");","map":{"version":3,"names":["React","useContext","useEffect","useState","SharedDataContext","jsxDEV","_jsxDEV","SpotifySearch","_s","searchTerm","data","setData","fetch","encodeURIComponent","method","headers","then","response","json","catch","error","console","children","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ariahan/Documents/FinalProject/client/src/components/SpotifySearch.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport SharedDataContext from './SharedDataContext';\n\nfunction SpotifySearch() {\n  const { searchTerm } = useContext(SharedDataContext);\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    if (searchTerm) {\n      fetch(`/api/spotify-search?q=${encodeURIComponent('track:' + searchTerm)}&type=track`, {\n        method: 'GET',\n        headers: {\n        }\n      })\n      .then(response => response.json())\n      .then(data => setData(data))\n      .catch(error => console.error('Error fetching data:', error));\n    }\n  }, [searchTerm]);\n\n  return (\n    <div>\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </div>\n  );\n}\n\nexport default SpotifySearch;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAW,CAAC,GAAGR,UAAU,CAACG,iBAAiB,CAAC;EACpD,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,IAAIO,UAAU,EAAE;MACdG,KAAK,CAAE,yBAAwBC,kBAAkB,CAAC,QAAQ,GAAGJ,UAAU,CAAE,aAAY,EAAE;QACrFK,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE,CACT;MACF,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACN,IAAI,IAAIC,OAAO,CAACD,IAAI,CAAC,CAAC,CAC3BS,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;IAC/D;EACF,CAAC,EAAE,CAACX,UAAU,CAAC,CAAC;EAEhB,oBACEH,OAAA;IAAAgB,QAAA,eACEhB,OAAA;MAAAgB,QAAA,EAAMC,IAAI,CAACC,SAAS,CAACd,IAAI,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAACpB,EAAA,CAtBQD,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AAwBtB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}