{"ast":null,"code":"// BookSearch.js\nimport{useEffect,useState}from'react';import{Link}from'react-router-dom';import'../css/BookSearch.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function BookSearcher(_ref){let{bookTitle}=_ref;// useState hook to maintain the state of the books array\nconst[books,setBooks]=useState([]);// useEffect hook to perform side effects (fetching data in this case)\nuseEffect(()=>{// Only fetch books if a bookTitle is provided\nif(bookTitle){// Function to fetch books from the API\nconst fetchBooks=()=>{// Constructing the API URL, encoding the bookTitle to ensure it's URL-safe\nconst url=\"https://openlibrary.org/search.json?q=\".concat(encodeURIComponent(bookTitle));// Fetching data from the API\nfetch(url).then(response=>response.json()).then(data=>{const uniqueAuthors=new Set();const filteredBooks=data.docs.filter(book=>{if(book.author_name){const authors=book.author_name.filter(author=>{if(!uniqueAuthors.has(author)){uniqueAuthors.add(author);return true;}return false;});if(authors.length>0){book.author_name=authors;return true;}}return false;});setBooks(filteredBooks);}).catch(error=>console.error('Error fetching books',error));};// Calling the fetchBooks function\nfetchBooks();}},[bookTitle]);// The effect will re-run when the bookTitle prop changes\nconst handleBookClick=async bookTitle=>{try{const response=await fetch(\"https://openlibrary.org/search.json?title=\".concat(encodeURIComponent(bookTitle)));const data=await response.json();const bookData=data.docs[0];// Assuming the first result is the desired one\nawait axios.post('http://localhost:3000/analyze-book',{bookData});// Handle server response or navigation here\n}catch(error){console.error('Error processing book click:',error);// Handle error\n}};// Rendering the fetched book data\nreturn/*#__PURE__*/_jsx(\"div\",{children:books.map((book,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"title\",children:book.title}),book.author_name&&book.author_name.map((authorName,authorIndex)=>/*#__PURE__*/_jsxs(Link,{to:\"#\"// Not navigating, handling click with onClick\n,className:\"author-link\",onClick:()=>handleBookClick(book.title),children:[\"by \",authorName]},authorIndex))]},index))});}export default BookSearcher;","map":{"version":3,"names":["useEffect","useState","Link","jsx","_jsx","jsxs","_jsxs","BookSearcher","_ref","bookTitle","books","setBooks","fetchBooks","url","concat","encodeURIComponent","fetch","then","response","json","data","uniqueAuthors","Set","filteredBooks","docs","filter","book","author_name","authors","author","has","add","length","catch","error","console","handleBookClick","bookData","axios","post","children","map","index","className","title","authorName","authorIndex","to","onClick"],"sources":["/Users/ariahan/Library/Mobile Documents/com~apple~CloudDocs/BookishMelodiesJS/client/src/components/BookSearch.js"],"sourcesContent":["// BookSearch.js\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/BookSearch.css';\n\nfunction BookSearcher({ bookTitle }) {\n  // useState hook to maintain the state of the books array\n  const [books, setBooks] = useState([]);\n\n  // useEffect hook to perform side effects (fetching data in this case)\n  useEffect(() => {\n    // Only fetch books if a bookTitle is provided\n    if (bookTitle) {\n      // Function to fetch books from the API\n      const fetchBooks = () => {\n        // Constructing the API URL, encoding the bookTitle to ensure it's URL-safe\n        const url = `https://openlibrary.org/search.json?q=${encodeURIComponent(bookTitle)}`;\n        \n        // Fetching data from the API\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          const uniqueAuthors = new Set();\n          const filteredBooks = data.docs.filter(book => {\n            if (book.author_name) {\n              const authors = book.author_name.filter(author => {\n                if (!uniqueAuthors.has(author)) {\n                  uniqueAuthors.add(author);\n                  return true;\n                }\n                return false;\n              });\n              if (authors.length > 0) {\n                book.author_name = authors;\n                return true;\n              }\n            }\n            return false;\n          });\n          setBooks(filteredBooks);\n        })\n        .catch(error => console.error('Error fetching books', error));\n    };\n\n      // Calling the fetchBooks function\n      fetchBooks();\n    }\n  }, [bookTitle]); // The effect will re-run when the bookTitle prop changes\n\n\n  const handleBookClick = async (bookTitle) => {\n    try {\n      const response = await fetch(`https://openlibrary.org/search.json?title=${encodeURIComponent(bookTitle)}`);\n      const data = await response.json();\n      const bookData = data.docs[0]; // Assuming the first result is the desired one\n\n      await axios.post('http://localhost:3000/analyze-book', { bookData });\n      // Handle server response or navigation here\n    } catch (error) {\n      console.error('Error processing book click:', error);\n      // Handle error\n    }\n  };\n\n  // Rendering the fetched book data\nreturn (\n    <div>\n      {books.map((book, index) => (\n        <div key={index}>\n          <p className=\"title\">{book.title}</p>\n          {book.author_name && book.author_name.map((authorName, authorIndex) => (\n            <Link\n              key={authorIndex}\n              to=\"#\" // Not navigating, handling click with onClick\n              className=\"author-link\"\n              onClick={() => handleBookClick(book.title)}\n            >\n              by {authorName}\n            </Link>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default BookSearcher;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}