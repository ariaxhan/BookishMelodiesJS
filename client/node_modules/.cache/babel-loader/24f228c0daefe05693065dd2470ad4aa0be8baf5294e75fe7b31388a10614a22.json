{"ast":null,"code":"// BookSearch.js\nimport{useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function BookSearcher(_ref){let{bookTitle}=_ref;// useState hook to maintain the state of the books array\nconst[books,setBooks]=useState([]);// useEffect hook to perform side effects (fetching data in this case)\nuseEffect(()=>{// Only fetch books if a bookTitle is provided\nif(bookTitle){// Function to fetch books from the API\nconst fetchBooks=()=>{// Constructing the API URL, encoding the bookTitle to ensure it's URL-safe\nconst url=\"https://openlibrary.org/search.json?q=\".concat(encodeURIComponent(bookTitle));// Fetching data from the API\nfetch(url).then(response=>response.json())// Parsing the JSON response\n.then(data=>{// Updating the books state with the fetched data\nsetBooks(data.docs);// Assuming 'docs' contains the array of books\n}).catch(error=>console.error('Error fetching books',error));// Handling any fetch errors\n};// Calling the fetchBooks function\nfetchBooks();}},[bookTitle]);// The effect will re-run when the bookTitle prop changes\n// Rendering the fetched book data\nreturn/*#__PURE__*/_jsx(\"div\",{children:books.map((book,index)=>/*#__PURE__*/ // Rendering a paragraph for each book, using the subject property\n// The key should ideally be a unique identifier, but using index as a fallback\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:book.title},index),/*#__PURE__*/_jsx(\"p\",{children:book.subject},index)]}))});}export default BookSearcher;","map":{"version":3,"names":["useEffect","useState","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","BookSearcher","_ref","bookTitle","books","setBooks","fetchBooks","url","concat","encodeURIComponent","fetch","then","response","json","data","docs","catch","error","console","children","map","book","index","title","subject"],"sources":["/Users/ariahan/Documents/GitHub/BookishMelodiesJS/client/src/components/BookSearch.js"],"sourcesContent":["// BookSearch.js\nimport { useEffect, useState } from 'react';\n\nfunction BookSearcher({ bookTitle }) {\n  // useState hook to maintain the state of the books array\n  const [books, setBooks] = useState([]);\n\n  // useEffect hook to perform side effects (fetching data in this case)\n  useEffect(() => {\n    // Only fetch books if a bookTitle is provided\n    if (bookTitle) {\n      // Function to fetch books from the API\n      const fetchBooks = () => {\n        // Constructing the API URL, encoding the bookTitle to ensure it's URL-safe\n        const url = `https://openlibrary.org/search.json?q=${encodeURIComponent(bookTitle)}`;\n        \n        // Fetching data from the API\n        fetch(url)\n          .then(response => response.json()) // Parsing the JSON response\n          .then(data => {\n            // Updating the books state with the fetched data\n            setBooks(data.docs); // Assuming 'docs' contains the array of books\n          })\n          .catch(error => console.error('Error fetching books', error)); // Handling any fetch errors\n      };\n\n      // Calling the fetchBooks function\n      fetchBooks();\n    }\n  }, [bookTitle]); // The effect will re-run when the bookTitle prop changes\n\n  // Rendering the fetched book data\n  return (\n    <div>\n      {books.map((book, index) => (\n        // Rendering a paragraph for each book, using the subject property\n        // The key should ideally be a unique identifier, but using index as a fallback\n        <>\n        <p key={index}>{book.title}</p>\n          <p key={index}>{book.subject}</p>\n        </>\n      ))}\n    </div>\n  );\n}\n\nexport default BookSearcher;\n"],"mappings":"AAAA;AACA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE5C,QAAS,CAAAC,YAAYA,CAAAC,IAAA,CAAgB,IAAf,CAAEC,SAAU,CAAC,CAAAD,IAAA,CACjC;AACA,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAEtC;AACAD,SAAS,CAAC,IAAM,CACd;AACA,GAAIU,SAAS,CAAE,CACb;AACA,KAAM,CAAAG,UAAU,CAAGA,CAAA,GAAM,CACvB;AACA,KAAM,CAAAC,GAAG,0CAAAC,MAAA,CAA4CC,kBAAkB,CAACN,SAAS,CAAC,CAAE,CAEpF;AACAO,KAAK,CAACH,GAAG,CAAC,CACPI,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAE;AAAA,CAClCF,IAAI,CAACG,IAAI,EAAI,CACZ;AACAT,QAAQ,CAACS,IAAI,CAACC,IAAI,CAAC,CAAE;AACvB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,EAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAAC,CAAE;AACnE,CAAC,CAED;AACAX,UAAU,CAAC,CAAC,CACd,CACF,CAAC,CAAE,CAACH,SAAS,CAAC,CAAC,CAAE;AAEjB;AACA,mBACEP,IAAA,QAAAuB,QAAA,CACGf,KAAK,CAACgB,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,iBACrB;AACA;AACAtB,KAAA,CAAAF,SAAA,EAAAqB,QAAA,eACAvB,IAAA,MAAAuB,QAAA,CAAgBE,IAAI,CAACE,KAAK,EAAlBD,KAAsB,CAAC,cAC7B1B,IAAA,MAAAuB,QAAA,CAAgBE,IAAI,CAACG,OAAO,EAApBF,KAAwB,CAAC,EACjC,CACH,CAAC,CACC,CAAC,CAEV,CAEA,cAAe,CAAArB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}